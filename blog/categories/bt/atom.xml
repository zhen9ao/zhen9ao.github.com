<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: BT | Jack's Blog]]></title>
  <link href="http://zhen9ao.github.io/blog/categories/bt/atom.xml" rel="self"/>
  <link href="http://zhen9ao.github.io/"/>
  <updated>2013-08-08T14:48:25+08:00</updated>
  <id>http://zhen9ao.github.io/</id>
  <author>
    <name><![CDATA[zhen9ao]]></name>
    <email><![CDATA[zhen9ao@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenWrt脱机下载]]></title>
    <link href="http://zhen9ao.github.io/blog/2012/11/19/openwrttuo-ji-xia-zai/"/>
    <updated>2012-11-19T12:31:00+08:00</updated>
    <id>http://zhen9ao.github.io/blog/2012/11/19/openwrttuo-ji-xia-zai</id>
    <content type="html"><![CDATA[<p>一般为了实现脱机下载，可能会考虑搭建一个自用的NAS系统，不过这样的一个系统一般要准备一个小机箱之类的PC来搭建。考虑到耗电和成本的因素，加上OpenWrt很好很强大，所以完全没必要为了脱机下载专门配个Atom芯片的PC，一个路由器足以搞定。</p>

<h3>准备</h3>

<p>一个可以刷OpenWrt的路由器（我用的wr703n），一个大U盘（现在U盘都非常便宜，100多就可以买一个32G的），一个Linux虚拟机或者物理机。</p>

<h2>配置OpenWrt</h2>

<p>刷好OpenWrt之后，只需要先把网络、无线先配置好，然后通过wifi连接路由器。</p>

<h3>让路由器从U盘引导启动</h3>

<p>这么做，有几个好处：</p>

<ol>
<li>使用<code>opkg</code>安装的东西就默认在U盘了，需要装什么就可以尽情的装。</li>
<li>如果以后再对路由器修改配置导致路由器变砖或者无法启动，拔掉U盘就可以从路由器的存储启动了，不用重新刷机。</li>
</ol>


<!--more-->


<p>可以参考这里的官方文档： <a href="http://wiki.openwrt.org/doc/howto/extroot">点我</a></p>

<p>需要安装几个包： <code>kmod-usb-storage</code>、<code>block-mount</code>、<code>kmod-fs-ext4</code>。</p>

<p>U盘要在Linux系统中先格式化成<code>ext4</code>的文件系统。</p>

<p>修改<code>/etc/config/fstab</code>：</p>

<pre><code>config mount
    option target           /overlay
    option device           /dev/sda1
    option fstype           ext4
    option options          rw,sync
    option enabled          1
    option enabled_fsck     0
config swap
    option device   /dev/sda2
    option enabled  1
</code></pre>

<p>运行命令，使<code>fstab</code>开机自动启动：</p>

<pre><code>/etc/init.d/fstable enable
/etc/init.d/fstable start
</code></pre>

<p>创建可以被OpenWrt引导的U盘：</p>

<pre><code>mkdir /tmp/sda1
mkdir /tmp/root
mount /dev/sda1 /tmp/sda1
mount -o bind / /tmp/root
cp -a /tmp/root/* /tmp/sda1
</code></pre>

<p>这时重启以后，路由器就从U盘引导启动了！</p>

<h3>安装配置<code>transmission</code></h3>

<p>安装了transmission的bt客户端，</p>

<pre><code>opkg update &amp;&amp; opkg install transmission-web
</code></pre>

<p>修改transmission的配置<code>/etc/conifg/transmission</code>，需要修改的项如下：</p>

<pre><code>option enable 1

option config_dir '/mnt/usb/bt' 
option download_dir '/mnt/usb/bt/done'

option rpc_authentication_required true
option rpc_bind_address '0.0.0.0'
option rpc_enabled true
option rpc_password 'yourpassword'
option rpc_port 9091
option rpc_username 'user'
option rpc_whitelist '127.0.0.1,192.168.1.*'
option rpc_whitelist_enabled false
</code></pre>

<p>然后启动transmission的自动启动脚本：</p>

<pre><code>/etc/init.d/transmission enable
/etc/init.d/transmission start
</code></pre>

<p>这样，通过浏览器访问路由器的<code>9091</code>端口就可以访问网页控制界面了，通过这个界面就可以上传种子文件。</p>

<h3>安装配置<code>samba</code></h3>

<p>有了samba服务，就可以实用finder或者资源管理器访问路由器的目录了，不用每次都用scp那么麻烦。</p>

<p>安装：</p>

<pre><code>opkg install samba36-server
</code></pre>

<p>要先创建samba用户并设置密码：</p>

<pre><code>smbpasswd -a root
</code></pre>

<p>修改<code>/etc/config/samba</code>，在文件后面添加一个共享目录：</p>

<pre><code>config sambashare
    option 'name'           'root'
    option 'path'           '/'
    option 'read_only'      'no'
    option 'guest_ok'       'no'
    option 'create_mask'    '0700'
    option 'dir_mask'       '0700'
</code></pre>

<p>修改<code>/etc/samba/smb.conf.templet</code>模板文件，需要修改的内容：</p>

<pre><code>unix charset = utf-8
#invalid users = root
</code></pre>

<p>启用服务：</p>

<pre><code>/etc/init.d/samba enable
/etc/init.d/samba start 
</code></pre>

<p>这样，一个能进行脱机下载的OpenWrt路由器就配置好了！</p>

<p>PS: 如果路由器同时也配置了openvpn服务，最好在下载的时候关闭openvpn，这样也防止vpn账号被警告。</p>

<p>PPS: bt下载很费内存，所以建立一个swapfile来当做swap可以让bt下载比较稳定。</p>

<pre><code>＃在/下创建一个64M的交换文件，时间较长
dd if=/dev/zero of=/swapfile bs=1024 count=62142

mkswap /swapfile

swapon /swapfile
</code></pre>

<p>然后修改<code>/etc/config/fstab</code>使得swap开机自动加载</p>

<pre><code>config swap
    option device /swapfile
    option enabled 1
</code></pre>
]]></content>
  </entry>
  
</feed>
